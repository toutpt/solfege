{"version":3,"sources":["notes.js","components/Partition.js","components/Clavier.js","App.js","serviceWorker.js","index.js"],"names":["SOLFEGE","SOLFEGE_INV","concat","reverse","assignPartition","clavier","current","index","prev","find","n","pos","diez","partitionLine","assignLeftPartition","next","CLAVIER","len","solfegeName","nextIndex","length","endsWith","push","unshift","getClavier","Note","path","trail","color","cle","props","DIM_NOTES_RADIUS","DIM_NOTES_H","cx","cy","rx","ry","fill","d","stroke","getSolY","COUNT_NOTES_V","getFaY","PADDING","Sol","notes","className","x","y","COUNT_NOTES_W","map","i","outlines","Fragment","key","l","transform","data-pos","data-y","Fa","Partition","filter","viewBox","Clavier","type","onClick","onNote","data-num","data-diez","data-partition","App","React","useState","position","setPosition","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.01895223.chunk.js","sourcesContent":["export const SOLFEGE = [\n  \"do\",\n  \"do#\",\n  \"re\",\n  \"re#\",\n  \"mi\",\n  \"fa\",\n  \"fa#\",\n  \"sol\",\n  \"sol#\",\n  \"la\",\n  \"la#\",\n  \"si\",\n];\nconst SOLFEGE_INV = [].concat(SOLFEGE).reverse();\n\nfunction assignPartition(clavier, current, index) {\n    const prev = clavier.find(n => n.pos === index - 1);\n    if (current.diez) {\n        current.partitionLine = prev.partitionLine;\n    } else {\n        current.partitionLine = prev.partitionLine + 1;\n    }\n}\nfunction assignLeftPartition(clavier, current, index) {\n    const next = clavier.find(n => n.pos === index + 1);\n    if (next.diez) {\n        current.partitionLine = next.partitionLine;\n    } else {\n        current.partitionLine = next.partitionLine - 1;\n    }\n}\nexport function getClavier(len = 72) {\n  const CLAVIER = [\n    {\n        pos: 0,\n        diez: false,\n        solfegeName: 'do',\n        partitionLine: 0,\n      }\n  ];\n  for (let index = 1; index <= len/2; index++) {\n    const nextIndex = index % SOLFEGE.length;\n    let solfegeName = SOLFEGE[nextIndex];\n    let current = {\n        pos: index,\n        diez: solfegeName.endsWith(\"#\"),\n        solfegeName,\n    };\n    CLAVIER.push(current);\n    assignPartition(CLAVIER, current, index);\n    solfegeName = SOLFEGE_INV[nextIndex];\n    current = {\n        pos: -index,\n        diez: solfegeName.endsWith(\"#\"),\n        solfegeName,\n    };\n    CLAVIER.unshift(current);\n    assignLeftPartition(CLAVIER, current, -index);\n  }\n  return CLAVIER;\n}\n\nexport const CLAVIER = getClavier();\n","import React from 'react';\nimport './Partition.css';\nimport { CLAVIER } from '../notes';\n\n\nconst COUNT_NOTES_V = 20;\nconst COUNT_NOTES_W = 32;\nconst DIM_NOTES_RADIUS = 5; //circle of the note\nconst DIM_NOTES_H = 50;\nconst WIDTH = COUNT_NOTES_W * DIM_NOTES_RADIUS * 4;\nconst HEIGHT = COUNT_NOTES_V * DIM_NOTES_RADIUS;\nconst PADDING = 50;\n\nfunction Note({ trail, cle, diez, color, ...props }) {\n    //viewBox={`0 0 ${DIM_NOTES_RADIUS * 2} ${DIM_NOTES_H}`}\n    let path;\n    if (trail === 'bottom') {\n        path = `M ${DIM_NOTES_RADIUS * 2 + 3} ${DIM_NOTES_H - DIM_NOTES_RADIUS} V ${DIM_NOTES_H *1 /3}`;\n    } else if (trail === 'top') {\n        path = `M 3 ${DIM_NOTES_H - DIM_NOTES_RADIUS} V ${DIM_NOTES_H * 4/3}`;\n    }\n    return (\n        <svg {...props}>\n            <ellipse cx={DIM_NOTES_RADIUS + 3} cy={DIM_NOTES_H - DIM_NOTES_RADIUS} rx={DIM_NOTES_RADIUS} ry={DIM_NOTES_RADIUS -1} fill={color} />\n            <path d={path} stroke={color}  />\n        </svg>\n    )\n}\n\nfunction getSolY(n) {\n    return HEIGHT - n * DIM_NOTES_RADIUS;\n}\n\nfunction getFaY(n) {\n    return PADDING + HEIGHT - n * DIM_NOTES_RADIUS;\n}\n\nfunction Sol({notes, current}) {\n    return (\n        <g className=\"Partition__sol\">\n            <text x=\"0\" y={getSolY(4)}>Sol</text>\n            <g>\n                <path d={`M 0 ${getSolY(10)} H${WIDTH}`} stroke=\"black\" />\n                <path d={`M 0 ${getSolY(8)} H${WIDTH}`} stroke=\"black\" />\n                <path d={`M 0 ${getSolY(6)} H${WIDTH}`} stroke=\"black\" />\n                <path d={`M 0 ${getSolY(4)} H${WIDTH}`} stroke=\"black\" />\n                <path d={`M 0 ${getSolY(2)} H${WIDTH}`} stroke=\"black\" />\n            </g>\n            {notes.map((n, i) => {\n                const outlines = [];\n                let trail = 'top';\n                const color = current === i ? 'black' : '#666';\n\n                if (n.partitionLine >= 7) { //do\n                    trail = 'bottom';\n                }\n                if (n.partitionLine <= 0) {\n                    outlines.push(`M ${41 + i*DIM_NOTES_RADIUS*4} ${getSolY(0)} H ${56 + i*DIM_NOTES_RADIUS*4}`);\n                    outlines.push(`M ${41 + i*DIM_NOTES_RADIUS*4} ${getSolY(-2)} H ${56 + i*DIM_NOTES_RADIUS*4}`);\n                } else if (n.partitionLine >= 10) {\n                    outlines.push(`M ${41 + i*DIM_NOTES_RADIUS*4} ${getSolY(14)} H ${56 + i*DIM_NOTES_RADIUS*4}`);\n                    outlines.push(`M ${41 + i*DIM_NOTES_RADIUS*4} ${getSolY(12)} H ${56 + i*DIM_NOTES_RADIUS*4}`);\n                    outlines.push(`M ${41 + i*DIM_NOTES_RADIUS*4} ${getSolY(10)} H ${56 + i*DIM_NOTES_RADIUS*4}`);\n                }\n                return (\n                    <React.Fragment key={n.pos}>\n                        {outlines.map(l => <path key={l} d={l} stroke={color} />)}\n                        <g transform={`translate(${40 + i*DIM_NOTES_RADIUS*4} ${getSolY(n.partitionLine) - DIM_NOTES_H + DIM_NOTES_RADIUS})`}>\n                            <Note trail={trail} diez={n.diez} cle=\"sol\" data-pos={n.partitionLine} data-y={getSolY(n.partitionLine)} color={color}/>\n                        </g>\n                    </React.Fragment>\n                );\n            })}\n        </g>\n    );\n}\n\nfunction Fa({notes, current}) {\n    return (\n        <g className=\"Partition__fa\">\n            <text x=\"0\" y={getFaY(-4)}>Fa</text>\n            <g>\n                <path d={`M 0 ${getFaY(-2)} H${WIDTH}`} stroke=\"black\" />\n                <path d={`M 0 ${getFaY(-4)} H${WIDTH}`} stroke=\"black\" />\n                <path d={`M 0 ${getFaY(-6)} H${WIDTH}`} stroke=\"black\" />\n                <path d={`M 0 ${getFaY(-8)} H${WIDTH}`} stroke=\"black\" />\n                <path d={`M 0 ${getFaY(-10)} H${WIDTH}`} stroke=\"black\" />\n            </g>\n            {notes.map((n, i) => {\n                const outlines = [];\n                let trail = 'top';\n                const color = current === i ? 'black' : '#666';\n\n                if (n.partitionLine >= -6) {\n                    trail = 'bottom';\n                }\n                if (n.partitionLine >= 0) {\n                    outlines.push(`M ${41 + i*DIM_NOTES_RADIUS*4} ${getFaY(0)} H ${56 + i*DIM_NOTES_RADIUS*4}`);\n                    outlines.push(`M ${41 + i*DIM_NOTES_RADIUS*4} ${getFaY(2)} H ${56 + i*DIM_NOTES_RADIUS*4}`);\n                    outlines.push(`M ${41 + i*DIM_NOTES_RADIUS*4} ${getFaY(4)} H ${56 + i*DIM_NOTES_RADIUS*4}`);\n                } else if (n.partitionLine <= -12) {\n                    outlines.push(`M ${41 + i*DIM_NOTES_RADIUS*4} ${getFaY(-12)} H ${56 + i*DIM_NOTES_RADIUS*4}`);\n                    outlines.push(`M ${41 + i*DIM_NOTES_RADIUS*4} ${getFaY(-14)} H ${56 + i*DIM_NOTES_RADIUS*4}`);\n                    outlines.push(`M ${41 + i*DIM_NOTES_RADIUS*4} ${getFaY(-16)} H ${56 + i*DIM_NOTES_RADIUS*4}`);\n                }\n                return (\n                    <React.Fragment key={n.pos}>\n                        {outlines.map(l => <path key={l} d={l} stroke={color} />)}\n                        <g transform={`translate(${40 + i*DIM_NOTES_RADIUS*4} ${getFaY(n.partitionLine) - DIM_NOTES_H + DIM_NOTES_RADIUS})`}>\n                            <Note trail={trail} diez={n.diez} cle=\"fa\" data-pos={n.partitionLine} data-y={getFaY(n.partitionLine)} color={color}/>\n                        </g>\n                    </React.Fragment>\n                );\n            })}\n        </g>\n    );\n}\n\nexport default function Partition(props) {\n    const notes = props.notes.map(n => {\n        return CLAVIER.find(y => y.pos === n);\n    }).filter(n => {\n        if (props.cle === 'sol') {\n            return n.partitionLine > -5;\n        } else if (props.cle === 'fa'){\n            return n.partitionLine <= 5;\n        }\n        return true;\n    });\n    return (\n        <div className=\"Partition\">\n            <svg viewBox={`0 0 ${WIDTH} ${2 * HEIGHT + DIM_NOTES_RADIUS + PADDING}`}>\n                {(props.cle === 'sol' || !props.cle) && <Sol current={props.current} notes={notes} />}\n                {(props.cle === 'fa' || !props.cle) && <Fa current={props.current} notes={notes} />}\n            </svg>\n        </div>\n    );\n}","import React from \"react\";\nimport { CLAVIER } from \"../notes\";\nimport \"./Clavier.css\";\n\nexport default function Clavier(props) {\n  return (\n    <div className=\"Clavier\">\n      <h2>Clavier</h2>\n      <ul className=\"Clavier__touches\">\n        {CLAVIER.map((n) => (\n          <li className=\"Clavier__touche\" key={n.pos}>\n            <button\n              type=\"button\"\n              onClick={() => props.onNote(n)}\n              data-num={n.pos}\n              data-diez={n.diez ? 'true': 'false'}\n              data-partition={n.partitionLine}\n              className={\n                n.diez ? \"Clavier__touche-black\" : \"Clavier__touche-white\"\n              }\n            >\n              {n.solfegeName}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport Partition from './components/Partition';\nimport Clavier from './components/Clavier';\n\n/**\n * setup the state and handler\n */\nfunction App() {\n  // au clair de la lune\n  const notes = [-9,-8,-7,-6,-5,-4,-3,-2,-1,0,1,2,3,4,5,6,7,8,9];\n  // const notes = [41, 43, 45, 47, 48];\n  const [position, setPosition] = React.useState(0);\n  const onNote = (n) => {\n    if (notes[position] === n.pos) {\n      setPosition(position + 1);\n    }\n  }\n  return (\n    <div className=\"App\">\n        <h1>Learn Soflege</h1>\n        <Partition notes={notes} current={position} />\n        <Clavier onNote={onNote}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}